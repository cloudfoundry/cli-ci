---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: cfcli/cli-base

inputs:
- name: cli
  path: go/src/code.cloudfoundry.org/cli
- name: cf-cli-binaries
- name: bosh-lock
- name: vars-store

params:
  CF_CLI_EXPERIMENTAL: false
  CF_INT_CLIENT_ID:
  CF_INT_CLIENT_SECRET:
  CF_INT_CLIENT_CREDENTIALS_TEST_MODE: false
  CF_INT_DOCKER_IMAGE:
  CF_INT_DOCKER_USERNAME:
  CF_INT_DOCKER_PASSWORD:
  CF_INT_IGNORE_API_VERSION_CHECK: false
  NODES: 16

run:
  path: bash
  args:
  - -c
  - |
    set -e

    ENV=$(cat bosh-lock/name | cut -d "." -f 1)
    export SSL_CERT_DIR=/tmp/cert_dir
    mkdir -p $SSL_CERT_DIR

    pushd vars-store/ci/infrastructure/$ENV
      if [[ "$(cat bbl-state.json | jq -r '.bblVersion')" =~ v5 ]]; then
        eval "$(bbl5 print-env | grep -v '^ssh')"
        export JUMPBOX_IP=$(bosh int vars/jumpbox-vars-file.yml --path /external_ip)
        export CREDHUB_PROXY="ssh+socks5://jumpbox@${JUMPBOX_IP}:22?private-key=$JUMPBOX_PRIVATE_KEY"
        credhub1 login --username=credhub-cli --password="$CREDHUB_PASSWORD" --server="$CREDHUB_SERVER"

        export CF_INT_PASSWORD=$(credhub1 get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)
        export CF_INT_CUSTOM_CLIENT_ID="cf-custom"
        export CF_INT_CUSTOM_CLIENT_SECRET="$(credhub1 get -n /bosh-${ENV}/cf/custom-client-secret | bosh interpolate --path /value -)"

        credhub1 get --name /bosh-$ENV/cf/router_ca | bosh interpolate - --path /value/certificate > $SSL_CERT_DIR/$ENV.router.ca
      else
        eval "$(bbl print-env)"
        credhub login
        export CF_INT_PASSWORD=$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)
        export CF_INT_OIDC_USERNAME="admin-oidc"
        export CF_INT_OIDC_PASSWORD=$(credhub get -n /bosh-$ENV/cf/uaa_oidc_admin_password | bosh interpolate --path /value -)
        export CF_INT_CUSTOM_CLIENT_ID="cf-custom"
        export CF_INT_CUSTOM_CLIENT_SECRET="$(credhub get -n /bosh-${ENV}/cf/custom-client-secret | bosh interpolate --path /value -)"
        credhub get --name /bosh-$ENV/cf/router_ca | bosh interpolate - --path /value/certificate > $SSL_CERT_DIR/$ENV.router.ca
      fi

      bosh interpolate bbl-state.json --path /lb/cert > $SSL_CERT_DIR/$ENV.lb.cert
    popd

    export SKIP_SSL_VALIDATION=false

    set -x

    domain=$(cat bosh-lock/name)
    export CF_INT_API="https://api.${domain}"
    export CF_DIAL_TIMEOUT=15

    export GOPATH=$PWD/go
    export PATH=$GOPATH/bin:$PATH

    pushd cf-cli-binaries
      tar xvzf cf-cli-binaries.tgz
      chmod +x cf-cli_linux_x86-64
      mkdir -p $GOPATH/bin
      mv cf-cli_linux_x86-64 $GOPATH/bin/cf
    popd

    cd $GOPATH/src/code.cloudfoundry.org/cli

    go get -u github.com/onsi/ginkgo/ginkgo

    export RUN_ID=$(openssl rand -hex 16)

    echo "CF_INT_CLIENT_CREDENTIALS_TEST_MODE: $CF_INT_CLIENT_CREDENTIALS_TEST_MODE"

    ginkgo -r -nodes=$NODES -flakeAttempts=2 -slowSpecThreshold=60 -randomizeAllSpecs integration/shared/isolated integration/v6/isolated integration/shared/plugin integration/v6/push
    ginkgo -r -flakeAttempts=2 -slowSpecThreshold=60 -randomizeAllSpecs integration/shared/global integration/v6/global
