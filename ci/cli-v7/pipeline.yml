---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: terraform
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: ((bosh-lite-storage-bucket))
      prefix: on_demand_terraform_state_files/
      credentials: ((bosh-lite-gcp-json-key))

- name: capi-ci
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/capi-ci

- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment

- name: cf-deploy
  type: bosh-deployment
  source:
    skip_check: true

- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-ci
    branch: master

- name: cf-deployment-concourse-tasks
  type: git
  icon: github-box
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-acceptance-tests-v7
  type: git
  icon: github-box
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
    ignore_paths:
    - ci/*.yml
    - .envrc

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    tag_filter: v*

- name: cli
  type: git
  icon: console
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: v7

- name: cli-i18n
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-i18n
    branch: master

- name: cf-cli-binaries
  type: s3
  icon: folder
  source:
    bucket: ((staging-bucket-name))
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: "v7/cf-cli-binaries.tgz"

- name: edge-linux-binary-32
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli_edge_linux_i686.tgz
    region_name: us-west-1

- name: edge-linux-binary-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli_edge_linux_x86-64.tgz
    region_name: us-west-1

- name: edge-osx-binary-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli_edge_osx.tgz
    region_name: us-west-1

- name: edge-windows-binary-32
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-binary-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli_edge_winx64.zip
    region_name: us-west-1

- name: edge-deb-installer-32
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_i686.deb
    region_name: us-west-1

- name: edge-deb-installer-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_x86-64.deb
    region_name: us-west-1

- name: edge-redhat-installer-32
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_i686.rpm
    region_name: us-west-1

- name: edge-redhat-installer-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_x86-64.rpm
    region_name: us-west-1

- name: edge-osx-installer-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_osx.pkg
    region_name: us-west-1

- name: edge-windows-installer-32
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-installer-64
  type: s3
  source:
    bucket: v7-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf7-cli-installer_edge_winx64.zip
    region_name: us-west-1

- name: gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: mashed-potato

- name: legacy-gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: hasselback-potato

- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))

- name: vars-store
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master

# values for this already exist in last pass, blocked on
# blocked on https://github.com/concourse/concourse/issues/1407
- name: cf-cli-tracker
  type: tracker
  source:
    token: ((cf-cli-public-tracker-token))
    project_id: '2196383'
    tracker_url: https://www.pivotaltracker.com

- name: ubuntu-64-image
  type: registry-image
  source:
    repository: ubuntu

- name: ubuntu-32-image
  type: registry-image
  source:
    repository: i386/ubuntu

jobs:
- name: units
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
    - get: cli-ci
  - in_parallel:
    - task: lint
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/lint.yml
      params:
        TARGET_V7: true
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: &slack_notification_text |
            $BUILD_JOB_NAME failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-linux
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/units-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: units-osx
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/units-osx.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: units-windows
      timeout: 3h
      tags: [cli-windows-int]
      file: cli-ci/ci/cli-v7/tasks/units-windows.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text

- name: build-binaries
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
      passed: [units]
    - get: cli-ci
    - get: cli-i18n
  - task: build-i18n
    timeout: 3h
    file: cli-ci/ci/cli-v7/tasks/generate-i18n-resources.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: *slack_notification_text
  - in_parallel:
    - task: build
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/build-binaries.yml
      params:
        TARGET_GO_VERSION: go1.13.15
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: build-osx
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/build-osx-binary.yml
      params:
        TARGET_GO_VERSION: go1.13.15
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
  - task: combine-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v7/tasks/combine-binaries.yml
  - put: cf-cli-binaries
    params:
      file: compiled/cf-cli-binaries.tgz

- name: integration-linux
  serial: true
  plan:
  - in_parallel: &integration_resources
    - get: cli
      passed: [build-binaries]
    - get: cli-ci
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
      params: &integration_params
        CF_INT_CLIENT_ID: 'potato-face'
        CF_INT_CLIENT_SECRET: ((client-secret))
        CF_INT_DOCKER_IMAGE: ((dockerhub-private-image))
        CF_INT_DOCKER_USERNAME: ((dockerhub-username))
        CF_INT_DOCKER_PASSWORD: ((dockerhub-password))
        CF_INT_IGNORE_API_VERSION_CHECK: false
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-linux-bosh-lite
  plan:
  - in_parallel:
    - get: bosh-deployment
    - get: capi-ci
    - get: cf-deployment
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: vars-store
    - get: cli-ci
  - do:
    - put: terraform
      params:
        generate_random_name: true
        delete_on_failure: true
        terraform_source: capi-ci/terraform/bosh-lite/
        vars:
          project_id: ((bosh-lite-project-id))
          json_key: ((bosh-lite-gcp-json-key))
          dns_project_id: ((bosh-lite-project-id))
          dns_json_key: ((bosh-lite-gcp-json-key))
          system_domain_suffix: ((bosh-lite-system-domain-suffix))
          dns_zone_name: ((bosh-lite-dns-zone-name))
    - do:
        - task: create-bosh-lite
          timeout: 3h
          file: capi-ci/ci/bosh-lite/create-bosh-lite.yml
          params:
            GCP_JSON_KEY: ((bosh-lite-gcp-json-key))
            GCP_INSTANCE_TYPE: n1-highmem-16
        - do:
            - task: create-env-vars-file
              timeout: 3h
              file: capi-ci/ci/bosh-lite/create-env-vars-file.yml
            - task: upload-cf-assets
              timeout: 3h
              file: capi-ci/ci/bosh-lite/upload-cf-assets.yml
            - task: write-bosh-target-file
              timeout: 3h
              file: capi-ci/ci/bosh-lite/write-bosh-target-file.yml
            - put: cf-deploy
              params:
                source_file: bosh-target/target.yml
                manifest: cf-deployment/cf-deployment.yml
                vars_files:
                - bosh-target/vars.yml
                vars:
                  client-secret: ((client-secret))
                ops_files:
                - capi-ci/cf-deployment-operations/skip-cert-verify.yml
                - capi-ci/cf-deployment-operations/use-latest-stemcell.yml
                - cf-deployment/operations/bosh-lite.yml
                - cf-deployment/operations/use-compiled-releases.yml
                - cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml
                - cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell-bosh-lite.yml
                - cf-deployment/operations/use-internal-lookup-for-route-services.yml
                - capi-ci/cf-deployment-operations/seed-credhub-asg.yml
                - cli-ci/ci/infrastructure/operations/default-app-memory.yml
                - cli-ci/ci/infrastructure/operations/add-oidc-provider.yml
                - cli-ci/ci/infrastructure/operations/add-uaa-client-cf-custom.yml
                - cli-ci/ci/infrastructure/operations/give-cf-admin-clients-read-scope.yml
                - cli-ci/ci/infrastructure/operations/add-uaa-client-credentials.yml
            - task: upload-to-gcs
              timeout: 3h
              file: capi-ci/ci/gcs/upload-to-gcs.yml
              input_mapping:
                environment: terraform
                source-directory: director-state
              params:
                GCP_JSON_KEY: ((bosh-lite-gcp-json-key))
                GCP_BUCKET: ((bosh-lite-storage-bucket))
                GCP_PATH: director-state
                USE_ENV_NAMED_SUBDIR: true
          on_failure:
            task: delete-bosh-lite
            file: capi-ci/ci/bosh-lite/delete-bosh-lite.yml
      on_failure:
        put: terraform
        params:
          action: destroy
          env_name_file: terraform/name
          terraform_source: capi-ci/terraform/bosh-lite/
          vars:
            project_id: ((bosh-lite-project-id))
            json_key: ((bosh-lite-gcp-json-key))
            dns_project_id: ((bosh-lite-project-id))
            dns_json_key: ((bosh-lite-gcp-json-key))
            system_domain_suffix: ((bosh-lite-system-domain-suffix))
            dns_zone_name: ((bosh-lite-dns-zone-name))
        get_params:
          action: destroy
  - do:
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/integration-linux-bosh-lite.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      params: *integration_params
    ensure:
      do:
        - task: delete-bosh-lite
          timeout: 3h
          file: capi-ci/ci/bosh-lite/delete-bosh-lite.yml
        - put: terraform
          params:
            action: destroy
            env_name_file: terraform/name
            terraform_source: capi-ci/terraform/bosh-lite/
            vars:
              project_id: ((bosh-lite-project-id))
              json_key: ((bosh-lite-gcp-json-key))
              dns_project_id: ((bosh-lite-project-id))
              dns_json_key: ((bosh-lite-gcp-json-key))
              system_domain_suffix: ((bosh-lite-system-domain-suffix))
              dns_zone_name: ((bosh-lite-dns-zone-name))
          get_params:
            action: destroy

- name: integration-linux-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-windows
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      tags: [cli-windows-int]
      file: cli-ci/ci/cli-v7/tasks/integration-windows.yml
      params:
        <<: *integration_params
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-windows-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      tags: [cli-windows-int]
      file: cli-ci/ci/cli-v7/tasks/integration-windows.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-legacy
  serial: true
  plan:
  - in_parallel: &integration_legacy_resources
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: legacy-gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/integration-linux.yml
      params:
        <<: *integration_params
        NODES: 12
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
  ensure:
    put: legacy-gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-legacy-client-creds
  serial: true
  plan:
  - in_parallel: *integration_legacy_resources
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/integration-linux.yml
      params:
        <<: *integration_params
        NODES: 12
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
  ensure:
    put: legacy-gcp-bosh-pool
    params:
      release: bosh-lock

- name: create-installers
  serial: true
  plan:
  - in_parallel:
    - get: cli-ci
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-legacy
      - integration-legacy-client-creds
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-legacy
      - integration-legacy-client-creds
      trigger: true
  - task: extract-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v7/tasks/extract-binaries.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: |
          extracting the binaries in installer creation failed :bart:
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - in_parallel:
    - task: unix
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/create-installers.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            :ubuntu: create unix installers failed :redhat:
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    - task: windows
      timeout: 3h
      tags: [cli-windows-int]
      file: cli-ci/ci/cli-v7/tasks/create-edge-installers-windows.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            create windows installer failed :winc:
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - task: package-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v7/tasks/package-binaries.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: |
          extracting the binaries in installer creation failed :package:
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - in_parallel:
    - put: edge-linux-binary-32
      params:
        file: archives/cf7-cli_edge_linux_i686.tgz
    - put: edge-linux-binary-64
      params:
        file: archives/cf7-cli_edge_linux_x86-64.tgz
    - put: edge-osx-binary-64
      params:
        file: archives/cf7-cli_edge_osx.tgz
    - put: edge-windows-binary-32
      params:
        file: archives/cf7-cli_edge_win32.zip
    - put: edge-windows-binary-64
      params:
        file: archives/cf7-cli_edge_winx64.zip
    - put: edge-deb-installer-32
      params:
        file: archives/cf7-cli-installer_i686.deb
    - put: edge-deb-installer-64
      params:
        file: archives/cf7-cli-installer_x86-64.deb
    - put: edge-redhat-installer-32
      params:
        file: archives/cf7-cli-installer_i686.rpm
    - put: edge-redhat-installer-64
      params:
        file: archives/cf7-cli-installer_x86-64.rpm
    - put: edge-osx-installer-64
      params:
        file: archives/cf7-cli-installer_osx.pkg
    - put: edge-windows-installer-32
      params:
        file: winstallers/cf7-cli-installer_win32.zip
    - put: edge-windows-installer-64
      params:
        file: winstallers/cf7-cli-installer_winx64.zip

- name: integration-installers
  serial: true
  plan:
  - in_parallel:
    - get: cli-ci
    - get: cli
      passed: [create-installers]
    - get: edge-deb-installer-64
      trigger: true
      passed: [create-installers]
    - get: edge-deb-installer-32
      trigger: true
      passed: [create-installers]
    - get: edge-redhat-installer-64
      trigger: true
      passed: [create-installers]
    - get: edge-redhat-installer-32
      trigger: true
      passed: [create-installers]
    - get: ubuntu-64-image
    - get: ubuntu-32-image
  - in_parallel:
    - task: deb-64
      timeout: 3h
      image: ubuntu-64-image
      file: cli-ci/ci/shared/tasks/integration-debian-installers.yml
      input_mapping:
        installer: edge-deb-installer-64
      params:
        MAJOR_VERSION: 7
        ARCH: x86-64
    - task: deb-32
      timeout: 3h
      image: ubuntu-32-image
      file: cli-ci/ci/shared/tasks/integration-debian-installers.yml
      input_mapping:
        installer: edge-deb-installer-32
      params:
        MAJOR_VERSION: 7
        ARCH: i686
    - task: rpm-64
      timeout: 3h
      file: cli-ci/ci/shared/tasks/integration-rpm-installers.yml
      input_mapping:
        installer: edge-redhat-installer-64
      params:
        MAJOR_VERSION: 7
        ARCH: x86-64
    - task: rpm-32
      timeout: 3h
      file: cli-ci/ci/shared/tasks/integration-rpm-installers.yml
      input_mapping:
        installer: edge-redhat-installer-32
      params:
        MAJOR_VERSION: 7
        ARCH: i686

- name: cats
  serial: true
  plan:
  - in_parallel:
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-legacy
      - integration-legacy-client-creds
    - get: cf-acceptance-tests-v7
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-legacy
      - integration-legacy-client-creds
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cleanup-integration.yml
    - task: config
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/cats-config.yml
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/extract-linux-binary.yml
    - task: run-tests
      timeout: 3h
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-v7
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: deliver-stories
  serial: true
  plan:
  - get: cli
    passed:
    - integration-linux
    - integration-windows
    - integration-linux-client-creds
    - integration-windows-client-creds
    - integration-legacy
    - integration-legacy-client-creds
    trigger: true
  - put: cf-cli-tracker
    params:
      repos:
      - cli
