#!/usr/bin/env bash

set -e
set -o pipefail

FLY_TARGET_NAME=${1:-ci}
echo "Pipeline: $FLY_TARGET_NAME"

check_installed() {
  if ! command -v $1 > /dev/null 2>&1; then
    printf "$1 must be installed before running this script!"
    exit 1
  fi
}

configure_pipeline() {
  local name=$1
  local pipeline=$2

  printf "configuring the $name pipeline...\n"

  fly -t $FLY_TARGET_NAME set-pipeline \
    -p $name \
    -c $pipeline \
    -l <(lpass show "Concourse Credentials" --notes) \
    -l <(lpass show "Shared-CLI/Concourse/Concourse Credentials" --notes) \
    -l <(lpass show "VAT Concourse Credentials" --notes) \
    -v bosh-lite-gcp-json-key="$(lpass show Shared-CLI/bosh-service-account-gcp-creds --notes | jq -c . )" \
    -v bosh-lite-storage-bucket=bosh-lites \
    -v bosh-lite-project-id=cf-cli \
    -v bosh-lite-dns-zone-name=bosh-lite-pool \
    -v bosh-lite-system-domain-suffix=lite.cli.fun
}

configure_v7_infrastructure_pipeline() {
  local name=$1
  local creds=$2
  local potato=$3
  local cf_deployment_version=$4

  if [[ -z $cf_deployment_version ]]; then
    cf_deployment_version="v*"
  fi

  printf "configuring the $name pipeline...\n"

  fly -t $FLY_TARGET_NAME set-pipeline \
    -p $name \
    -c $pipelines_path/infrastructure/v7-pipeline.yml \
    -l <(lpass show "Concourse Credentials" --notes) \
    -l <(lpass show "$creds" --notes) \
    -v pool-name=$potato \
    -v cf-deployment-version=$cf_deployment_version
}


check_installed lpass
check_installed fly

# Make sure we're up to date and that we're logged in.
lpass sync

pipelines_path=$(cd $(dirname $0)/.. && pwd)

configure_pipeline v7 $pipelines_path/cli-v7/pipeline.yml

configure_v7_infrastructure_pipeline inf-delfina delfina-pipeline mashed-potato
configure_v7_infrastructure_pipeline inf-nopa nopa-pipeline mashed-potato
configure_v7_infrastructure_pipeline inf-zerozero zerozero-pipeline mashed-potato
configure_v7_infrastructure_pipeline inf-zuni zuni-pipeline mashed-potato
