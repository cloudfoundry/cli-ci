#!/usr/bin/env bash

set -e
set -o pipefail

check_installed() {
  if ! command -v $1 > /dev/null 2>&1; then
    printf "$1 must be installed before running this script!"
    exit 1
  fi
}

configure_pipeline() {
  local name=$1
  local pipeline=$2
  local env=$3
  local values_file=$4

  local target
  if [ "$3" == "prod" ]; then
    target="local"
  elif [ "$3" == "dev" ]; then
    target="ci"
  fi


  printf "configuring the $name pipeline...\n"

  fly -t ${target} set-pipeline \
    -p $name \
    -c $pipeline \
    -l $values_file \
    -l <(lpass show "release-pipeline-concourse-credentials.yml" --notes) \
    -l <(lpass show "VAT Concourse Credentials" --notes)
}

check_installed lpass
check_installed fly
check_installed ytt

# Make sure we're up to date and that we're logged in.
lpass sync

pipelines_path=$(cd $(dirname $0)/.. && pwd)

if [ "$1" == "prod" ]; then
  configure_pipeline cli-release \
    $pipelines_path/cli-release/pipeline.yml \
    $1 \
    $pipelines_path/cli-release/production-values.yml
elif [ "$1" == "dev" ]; then
  configure_pipeline cli-release-dev \
    $pipelines_path/cli-release/pipeline.yml \
    $1 \
    $pipelines_path/cli-release/dev-values.yml
else
  echo "Must specify either 'prod' or 'dev' before configuring pipeline!"
  exit 1
fi
