---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: v8-pool

- name: gcp-bosh-pool-only-v3-capi
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: v8-pool-v3-capi

- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-ci
    branch: master

- name: cli
  type: git
  icon: console
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master

- name: cf-cli-binaries
  type: s3
  icon: folder
  source:
    bucket: ((staging-bucket-name))
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: "v8/cf-cli-binaries.tgz"

- name: cf-deployment-concourse-tasks
  type: git
  icon: github-box
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-acceptance-tests-v7
  type: git
  icon: github-box
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
    ignore_paths:
    - ci/*.yml
    - .envrc

- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((vat-slack-webhook-url))

- name: vars-store
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master

jobs:
- name: units
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
    - get: cli-ci
  - in_parallel:
    - task: lint
      file: cli-ci/ci/cli-v7/tasks/lint.yml
      params:
        TARGET_V7: true
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: &slack_notification_text |
            $BUILD_JOB_NAME failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-linux
      file: cli-ci/ci/cli-v7/tasks/units-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
    - task: units-osx
      file: cli-ci/ci/cli-v7/tasks/units-osx.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
    - task: units-windows
      tags: [vat-windows]
      file: cli-ci/ci/cli-v7/tasks/units-windows.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text

- name: build-binaries
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
      passed: [units]
    - get: cli-ci
  - in_parallel:
    - task: build
      file: cli-ci/ci/cli-v8/tasks/build-binaries.yml
      params:
        TARGET_GO_VERSION: go1.13.8
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
    - task: build-osx
      file: cli-ci/ci/cli-v8/tasks/build-osx-binary.yml
      params:
        TARGET_GO_VERSION: go1.13.8
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
  - task: combine-binaries
    file: cli-ci/ci/cli-v8/tasks/combine-binaries.yml
  - put: cf-cli-binaries
    params:
      file: compiled/cf-cli-binaries.tgz

- name: integration-linux
  serial: true
  plan:
  - in_parallel: &integration_resources
    - get: cli
      passed: [build-binaries]
    - get: cli-ci
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: integration
      file: cli-ci/ci/cli-v8/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
      params: &integration_params
        CF_INT_CLIENT_ID: 'potato-face'
        CF_INT_CLIENT_SECRET: ((client-secret))
        CF_INT_DOCKER_IMAGE: ((dockerhub-private-image))
        CF_INT_DOCKER_USERNAME: ((dockerhub-username))
        CF_INT_DOCKER_PASSWORD: ((dockerhub-password))
        CF_INT_IGNORE_API_VERSION_CHECK: false
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-windows
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: integration
      tags: [vat-windows]
      file: cli-ci/ci/cli-v8/tasks/integration-windows.yml
      params:
        <<: *integration_params
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-linux-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: integration
      file: cli-ci/ci/cli-v8/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-windows-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: integration
      tags: [vat-windows]
      file: cli-ci/ci/cli-v8/tasks/integration-windows.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#v3-acceleration-team'
          text: *slack_notification_text
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: cats
  serial: true
  plan:
  - in_parallel:
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
    - get: cf-acceptance-tests-v7
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: config
      file: cli-ci/ci/cli-v8/tasks/cats-config.yml
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      file: cli-ci/ci/cli-v8/tasks/extract-linux-binary.yml
    - task: run-tests
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-v7
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      on_failure:
        put: slack-alert
        params:
          channel: '#cats-cli-v7-migration'
          text: *slack_notification_text
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: v3-only-cats
  serial: true
  plan:
  - in_parallel:
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
    - get: cf-acceptance-tests-v7
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool-only-v3-capi
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli-v8/tasks/cleanup-integration.yml
    - task: config
      file: cli-ci/ci/cli-v8/tasks/cats-config.yml
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      file: cli-ci/ci/cli-v8/tasks/extract-linux-binary.yml
    - task: run-tests
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-v7
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      on_failure:
        put: slack-alert
        params:
          channel: '#cats-cli-v7-migration'
          text: *slack_notification_text
  ensure:
    put: gcp-bosh-pool-only-v3-capi
    params:
      release: bosh-lock

