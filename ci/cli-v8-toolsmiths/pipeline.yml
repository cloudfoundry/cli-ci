---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: pcf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

resources:
- name: gcp-env
  type: pcf-pool
  source:
    api_token: ((toolsmiths-api-token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment

- name: cf-deployment
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((bosh-lite-pools-github-private-key))
    tag_filter: v*

- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-ci
    branch: toolsmiths

- name: cli
  type: git
  icon: console
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: v8

- name: cf-cli-binaries
  type: s3
  icon: folder
  source:
    bucket: ((staging-bucket-name))
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: "v8/cf-cli-binaries.tgz"

- name: cf-deployment-concourse-tasks
  type: git
  icon: github-box
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-acceptance-tests-rc
  type: git
  icon: github-box
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
    ignore_paths:
    - ci/*.yml
    - .envrc

- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))

- name: edge-linux-binary-32
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli_edge_linux_i686.tgz
    region_name: us-west-1

- name: edge-linux-binary-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli_edge_linux_x86-64.tgz
    region_name: us-west-1

- name: edge-osx-binary-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli_edge_osx.tgz
    region_name: us-west-1

- name: edge-windows-binary-32
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-binary-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli_edge_winx64.zip
    region_name: us-west-1

- name: edge-deb-installer-32
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_i686.deb
    region_name: us-west-1

- name: edge-deb-installer-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_x86-64.deb
    region_name: us-west-1

- name: edge-redhat-installer-32
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_i686.rpm
    region_name: us-west-1

- name: edge-redhat-installer-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_x86-64.rpm
    region_name: us-west-1

- name: edge-osx-installer-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_osx.pkg
    region_name: us-west-1

- name: edge-windows-installer-32
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-installer-64
  type: s3
  source:
    bucket: v8-cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf8-cli-installer_edge_winx64.zip
    region_name: us-west-1

- name: ubuntu-64-image
  type: registry-image
  source:
    repository: ubuntu
    tag: latest

- name: ubuntu-32-image
  type: registry-image
  source:
    repository: i386/ubuntu

- name: fedora-image
  type: registry-image
  source:
    repository: fedora

- name: edge-capi-release
  type: s3
  source:
    bucket: capi-releases
    regexp: capi-(.*)-.*-.*.tgz

jobs:
- name: units
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
    - get: cli-ci
  - in_parallel:
    - task: lint
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/lint.yml
      params:
        TARGET_V7: true
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: &slack_notification_text |
            $BUILD_JOB_NAME failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-linux
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/units-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: units-osx
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/units-osx.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: units-windows
      timeout: 3h
      file: cli-ci/ci/cli-v7/tasks/units-windows.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text

- name: build-binaries
  serial: true
  plan:
  - in_parallel:
    - get: cli
      trigger: true
      passed: [units]
    - get: cli-ci
  - in_parallel:
    - task: build
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/build-binaries.yml
      params:
        TARGET_GO_VERSION: go1.17.6
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
    - task: build-osx
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/build-osx-binary.yml
      params:
        TARGET_GO_VERSION: go1.17.6
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
  - task: combine-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v8/tasks/combine-binaries.yml
  - put: cf-cli-binaries
    params:
      file: compiled/cf-cli-binaries.tgz

- name: integration-linux
  serial: true
  plan:
  - in_parallel: &integration_resources
    - get: cli
      passed: [build-binaries]
    - get: cli-ci
    - get: cf-deployment
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: edge-capi-release
    - get: cf-deployment-concourse-tasks
    - put: gcp-env
      params:
        action: claim
  - do:
    - task: create-vars-file
      file: cli-ci/ci/infrastructure/tasks/create-vars-file.yml
      params:
        CLIENT_SECRET: ((client-secret))
    - task: copy-ops-files
      file: cli-ci/ci/infrastructure/tasks/combine-inputs.yml
      input_mapping:
        input1: cf-deployment
        input2: cli-ci
      params:
        COPY_PATHS:
          input1/operations/enable-service-discovery.yml
          input1/operations/scale-to-one-az.yml
          input1/operations/test/add-persistent-isolation-segment-diego-cell.yml
          input1/operations/use-compiled-releases.yml
          input1/operations/use-internal-lookup-for-route-services.yml
          input2/ci/infrastructure/operations/add-dummy-windows-stack.yml
          input2/ci/infrastructure/operations/add-oidc-provider.yml
          input2/ci/infrastructure/operations/add-uaa-client-credentials.yml
          input2/ci/infrastructure/operations/adjust-user-retry-attempts.yml
          input2/ci/infrastructure/operations/cli-isolation-cell-overrides.yml
          input2/ci/infrastructure/operations/default-app-memory.yml
          input2/ci/infrastructure/operations/diego-cell-instances.yml
          input2/ci/infrastructure/operations/doppler-instances.yml
          input2/ci/infrastructure/operations/enable-mysql-audit-logging.yml
          input2/ci/infrastructure/operations/enable-v3-deployments-endpoint.yml
          input2/ci/infrastructure/operations/increase-route-registration-interval.yml
          input2/ci/infrastructure/operations/reduce-async-service-polling.yml
          input2/ci/infrastructure/operations/skip-ssl-override.yml
          input2/ci/infrastructure/operations/uaa-vm_type-override.yml
          input2/ci/infrastructure/operations/use-latest-capi.yml
    - task: upload-edge-capi
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/upload-edge-capi.yml
      input_mapping:
        release-tarball: edge-capi-release
    - task: redeploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        toolsmiths-env: gcp-env
        vars-files: vars_path
        ops-files: combine_inputs_output
      params:
        OPS_FILES:
          add-persistent-isolation-segment-diego-cell.yml
          use-compiled-releases.yml
          use-latest-capi.yml
          cli-isolation-cell-overrides.yml
          default-app-memory.yml
          skip-ssl-override.yml
          scale-to-one-az.yml
          diego-cell-instances.yml
          doppler-instances.yml
          uaa-vm_type-override.yml
          add-uaa-client-credentials.yml
          add-dummy-windows-stack.yml
          reduce-async-service-polling.yml
          add-oidc-provider.yml
          adjust-user-retry-attempts.yml
          enable-v3-deployments-endpoint.yml
          enable-mysql-audit-logging.yml
          use-internal-lookup-for-route-services.yml
          enable-service-discovery.yml
          increase-route-registration-interval.yml
        VARS_FILES: vars.yml
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      params: &integration_params
        CF_INT_DOCKER_IMAGE: ((dockerhub-private-image))
        CF_INT_DOCKER_USERNAME: ((dockerhub-username))
        CF_INT_DOCKER_PASSWORD: ((dockerhub-password))
        CF_INT_IGNORE_API_VERSION_CHECK: false
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env
    
- name: integration-windows
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: setup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/setup-integration.yml
      params:
        CF_INT_CLIENT_SECRET: ((client-secret))
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/integration-windows.yml
      params:
        <<: *integration_params
      input_mapping:
        cf-credentials: setup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: integration-linux-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/integration-linux.yml      
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
        CF_INT_CLIENT_ID: potato-face
        CF_INT_CLIENT_SECRET: ((client-secret))
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: integration-windows-client-creds
  serial: true
  plan:
  - in_parallel: *integration_resources
  - do:
    - task: setup-integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/setup-integration.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
        CF_INT_CLIENT_ID: potato-face
        CF_INT_CLIENT_SECRET: ((client-secret))
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/integration-windows.yml
      params:
        <<: *integration_params
        CF_INT_CLIENT_CREDENTIALS_TEST_MODE: true
        CF_INT_CLIENT_ID: potato-face
        CF_INT_CLIENT_SECRET: ((client-secret))
      input_mapping:
        cf-credentials: setup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: integration-linux-minimum-capi
  serial: true
  plan:
  - in_parallel: &integration_resources
    - get: cli
      passed: [build-binaries]
    - get: cli-ci
    - get: cf-deployment
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - put: gcp-env
      params:
        action: claim
  - do:
    - task: integration
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/integration-linux.yml      
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: *slack_notification_text
      params: &integration_params
        CF_INT_IGNORE_API_VERSION_CHECK: false
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: cats
  serial: true
  plan:
  - in_parallel:
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
    - get: cf-acceptance-tests-rc
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
      trigger: true
    - get: cli-ci
    - get: cf-deployment
    - get: edge-capi-release
    - put: gcp-env
      timeout: 2h
      params:
        action: claim
  - do:
    - task: create-vars-file
      file: cli-ci/ci/infrastructure/tasks/create-vars-file.yml
      params:
        CLIENT_SECRET: ((client-secret))
    - task: copy-ops-files
      file: cli-ci/ci/infrastructure/tasks/combine-inputs.yml
      input_mapping:
        input1: cf-deployment
        input2: cli-ci
      params:
        COPY_PATHS:
          input1/operations/enable-service-discovery.yml
          input1/operations/scale-to-one-az.yml
          input1/operations/test/add-persistent-isolation-segment-diego-cell.yml
          input1/operations/use-compiled-releases.yml
          input1/operations/use-internal-lookup-for-route-services.yml
          input2/ci/infrastructure/operations/add-dummy-windows-stack.yml
          input2/ci/infrastructure/operations/add-oidc-provider.yml
          input2/ci/infrastructure/operations/add-uaa-client-credentials.yml
          input2/ci/infrastructure/operations/adjust-user-retry-attempts.yml
          input2/ci/infrastructure/operations/cli-isolation-cell-overrides.yml
          input2/ci/infrastructure/operations/default-app-memory.yml
          input2/ci/infrastructure/operations/diego-cell-instances.yml
          input2/ci/infrastructure/operations/doppler-instances.yml
          input2/ci/infrastructure/operations/enable-mysql-audit-logging.yml
          input2/ci/infrastructure/operations/enable-v3-deployments-endpoint.yml
          input2/ci/infrastructure/operations/increase-route-registration-interval.yml
          input2/ci/infrastructure/operations/reduce-async-service-polling.yml
          input2/ci/infrastructure/operations/skip-ssl-override.yml
          input2/ci/infrastructure/operations/uaa-vm_type-override.yml
          input2/ci/infrastructure/operations/use-latest-capi.yml
    - task: upload-edge-capi
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/upload-edge-capi.yml
      # config:
      #   platform: linux

      #   image_resource:
      #     type: docker-image
      #     source:
      #       repository: relintdockerhubpushbot/cf-deployment-concourse-tasks

      #   inputs:
      #     - name: cli-ci
      #     - name: release-tarball
      #     - name: gcp-env
      #     # Input mapping to directory containing .tgz files

      #   run:
      #     path: bash
      #     args:
      #       - -c
      #       - |
      #         set -eu

      #         eval "$(bbl print-env --metadata-file gcp-env/metadata)"
      #         for filename in release-tarball/*.tgz; do
      #           bosh upload-release --sha2 "$filename"
      #         done        
      input_mapping:
        release-tarball: edge-capi-release
    - task: redeploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        toolsmiths-env: gcp-env
        vars-files: vars_path
        ops-files: combine_inputs_output
      params:
        OPS_FILES:
          add-persistent-isolation-segment-diego-cell.yml
          use-compiled-releases.yml
          use-latest-capi.yml
          cli-isolation-cell-overrides.yml
          default-app-memory.yml
          skip-ssl-override.yml
          scale-to-one-az.yml
          diego-cell-instances.yml
          doppler-instances.yml
          uaa-vm_type-override.yml
          add-uaa-client-credentials.yml
          add-dummy-windows-stack.yml
          reduce-async-service-polling.yml
          add-oidc-provider.yml
          adjust-user-retry-attempts.yml
          enable-v3-deployments-endpoint.yml
          enable-mysql-audit-logging.yml
          use-internal-lookup-for-route-services.yml
          enable-service-discovery.yml
          increase-route-registration-interval.yml
        VARS_FILES: vars.yml
    - task: config
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks-toolsmiths/cats-config.yml
      # config:
      #   platform: linux

      #   image_resource:
      #     type: docker-image
      #     source:
      #       repository: relintdockerhubpushbot/cf-deployment-concourse-tasks

      #   inputs:
      #     - name: cf-cli-binaries
      #     - name: gcp-env
      #     - name: cli-ci
      #     - name: cf-deployment

      #   outputs:
      #     - name: cats-config

      #   params:
      #     INCLUDE_V3:
      #     BROKER_START_TIMEOUT:
      #     CF_PUSH_TIMEOUT:
      #     DEFAULT_TIMEOUT:
      #     LONG_CURL_TIMEOUT:

      #   run:
      #     path: bash
      #     args:
      #     - -c
      #     - |
      #       set -eu

      #       ENV=`cat gcp-env/name`
      #       DOMAIN="${ENV}.cf-app.com"
      #       API="api.${DOMAIN}"
      #       CF_INT_USERNAME="admin"

      #       cat gcp-env/metadata > $ENV.json
      #       eval "$(bbl print-env --metadata-file $ENV.json)"
      #       # bosh -d cf manifest > ${ENV}_cf_deployment.yml

      #       # bosh interpolate ${ENV}_cf_deployment.yml \
      #       # -o cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml \
      #       # -o cf-deployment/operations/use-internal-lookup-for-route-services.yml \
      #       # -o cf-deployment/operations/enable-service-discovery.yml \
      #       # -o cli-ci/ci/infrastructure/operations/use-latest-capi.yml \
      #       # -o cli-ci/ci/infrastructure/operations/default-app-memory.yml \
      #       # -o cli-ci/ci/infrastructure/operations/add-oidc-provider.yml \
      #       # -o cli-ci/ci/infrastructure/operations/cli-isolation-cell-overrides.yml \
      #       # -o cli-ci/ci/infrastructure/operations/increase-route-registration-interval.yml \
      #       # -o cli-ci/ci/infrastructure/operations/skip-ssl-override.yml \
      #       # -o cli-ci/ci/infrastructure/operations/adjust-user-retry-attempts.yml \
      #       # -o cli-ci/ci/infrastructure/operations/diego-cell-instances.yml \
      #       # -o cli-ci/ci/infrastructure/operations/doppler-instances.yml \
      #       #  > ./director.yml

      #       # bosh -d cf deploy director.yml -n            

      #       credhub login
      #       CF_INT_PASSWORD=$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)

      #       cat << EOF | jq -S . > cats-config/integration_config.json
      #       {
      #         "admin_password": "${CF_INT_PASSWORD}",
      #         "admin_user": "${CF_INT_USERNAME}",
      #         "api": "${API}",
      #         "apps_domain": "${DOMAIN}",
      #         "backend" : "diego",
      #         "broker_start_timeout": ${BROKER_START_TIMEOUT},
      #         "cf_push_timeout": ${CF_PUSH_TIMEOUT},
      #         "default_timeout": ${DEFAULT_TIMEOUT},
      #         "long_curl_timeout": ${LONG_CURL_TIMEOUT},
      #         "skip_ssl_validation": true,
      #         "use_http": true,
      #         "include_apps": true,
      #         "include_backend_compatibility": false,
      #         "include_container_networking": true,
      #         "include_detect": true,
      #         "include_docker": true,
      #         "include_internet_dependent": true,
      #         "include_isolation_segments": true,
      #         "isolation_segment_name": "persistent_isolation_segment",
      #         "include_private_docker_registry": false,
      #         "include_route_services": true,
      #         "include_routing": true,
      #         "include_routing_isolation_segments": false,
      #         "include_security_groups": true,
      #         "include_services": true,
      #         "include_service_discovery": true,
      #         "include_service_instance_sharing": true,
      #         "include_ssh": true,
      #         "include_sso": false,
      #         "include_tasks": true,
      #         "include_tcp_routing": true,
      #         "include_v3": ${INCLUDE_V3},
      #         "include_zipkin": true
      #       }
      #       EOF

      #       bindir=${PWD}/bin
      #       mkdir -p ${bindir}
      #       export PATH=${bindir}:$PATH

      #       pushd cf-cli-binaries
      #         tar xvf cf-cli-binaries.tgz
      #         chmod +x cf-cli_linux_x86-64
      #         ln -s ${PWD}/cf-cli_linux_x86-64 ${bindir}/cf
      #       popd

      #       export CF_USERNAME=${CF_INT_USERNAME}
      #       export CF_PASSWORD=${CF_INT_PASSWORD}
      #       cf api ${API} --skip-ssl-validation
      #       cf auth
      #       cf enable-feature-flag diego_docker
      #       cf enable-feature-flag service_instance_sharing
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/extract-linux-binary.yml
    - task: run-tests
      timeout: 3h
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-rc
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      # on_failure:
      #   put: slack-alert
      #   params:
      #     channel: '#cli-dev-internal'
      #     text: *slack_notification_text
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: cats-minimum-capi
  serial: true
  plan:
  - in_parallel:
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
    - get: cf-acceptance-tests-rc
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
      trigger: true
    - get: cli-ci
    - get: cf-deployment
    - put: gcp-env
      timeout: 2h
      params:
        action: claim    
  - do:
    - task: create-vars-file
      file: cli-ci/ci/infrastructure/tasks/create-vars-file.yml
      params:
        CLIENT_SECRET: ((client-secret))
    - task: copy-ops-files
      file: cli-ci/ci/infrastructure/tasks/combine-inputs.yml
      input_mapping:
        input1: cf-deployment
        input2: cli-ci
      params:
        COPY_PATHS:
          input1/operations/enable-service-discovery.yml
          input1/operations/scale-to-one-az.yml
          input1/operations/test/add-persistent-isolation-segment-diego-cell.yml
          input1/operations/use-compiled-releases.yml
          input1/operations/use-internal-lookup-for-route-services.yml
          input2/ci/infrastructure/operations/add-dummy-windows-stack.yml
          input2/ci/infrastructure/operations/add-oidc-provider.yml
          input2/ci/infrastructure/operations/add-uaa-client-credentials.yml
          input2/ci/infrastructure/operations/adjust-user-retry-attempts.yml
          input2/ci/infrastructure/operations/cli-isolation-cell-overrides.yml
          input2/ci/infrastructure/operations/default-app-memory.yml
          input2/ci/infrastructure/operations/diego-cell-instances.yml
          input2/ci/infrastructure/operations/doppler-instances.yml
          input2/ci/infrastructure/operations/enable-mysql-audit-logging.yml
          input2/ci/infrastructure/operations/enable-v3-deployments-endpoint.yml
          input2/ci/infrastructure/operations/increase-route-registration-interval.yml
          input2/ci/infrastructure/operations/reduce-async-service-polling.yml
          input2/ci/infrastructure/operations/skip-ssl-override.yml
          input2/ci/infrastructure/operations/uaa-vm_type-override.yml
          input2/ci/infrastructure/operations/use-latest-capi.yml
    - task: redeploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        toolsmiths-env: gcp-env
        vars-files: vars_path
        ops-files: combine_inputs_output
      params:
        OPS_FILES:
          add-persistent-isolation-segment-diego-cell.yml
          use-compiled-releases.yml
          use-latest-capi.yml
          cli-isolation-cell-overrides.yml
          default-app-memory.yml
          skip-ssl-override.yml
          scale-to-one-az.yml
          diego-cell-instances.yml
          doppler-instances.yml
          uaa-vm_type-override.yml
          add-uaa-client-credentials.yml
          add-dummy-windows-stack.yml
          reduce-async-service-polling.yml
          add-oidc-provider.yml
          adjust-user-retry-attempts.yml
          enable-v3-deployments-endpoint.yml
          enable-mysql-audit-logging.yml
          use-internal-lookup-for-route-services.yml
          enable-service-discovery.yml
          increase-route-registration-interval.yml
        VARS_FILES: vars.yml
    - task: config
      timeout: 3h
      file: cli-ci/ci/cli-v8-toolsmiths/tasks/cats-config.yml
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/extract-linux-binary.yml
    - task: run-tests
      timeout: 3h
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        cf-acceptance-tests: cf-acceptance-tests-rc
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      # on_failure:
      #   put: slack-alert
      #   params:
      #     channel: '#cli-dev-internal'
      #     text: *slack_notification_text
  ensure:
    put: gcp-env
    params:
      action: unclaim
      env_file: gcp-env/metadata
    inputs:
    - gcp-env

- name: create-installers
  serial: true
  plan:
  - in_parallel:
    - get: cli-ci
    - get: cli
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
    - get: cf-cli-binaries
      passed:
      - integration-linux
      - integration-linux-client-creds
      - integration-windows
      - integration-windows-client-creds
      - integration-linux-minimum-capi
      trigger: true
  - task: extract-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v8/tasks/extract-binaries.yml
  - in_parallel:
    - task: unix
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/create-installers.yml
    - task: windows
      timeout: 3h
      file: cli-ci/ci/cli-v8/tasks/create-edge-installers-windows.yml
  - task: package-binaries
    timeout: 3h
    file: cli-ci/ci/cli-v8/tasks/package-binaries.yml
  - in_parallel:
    - put: edge-linux-binary-32
      params:
        file: archives/cf8-cli_edge_linux_i686.tgz
    - put: edge-linux-binary-64
      params:
        file: archives/cf8-cli_edge_linux_x86-64.tgz
    - put: edge-osx-binary-64
      params:
        file: archives/cf8-cli_edge_osx.tgz
    - put: edge-windows-binary-32
      params:
        file: archives/cf8-cli_edge_win32.zip
    - put: edge-windows-binary-64
      params:
        file: archives/cf8-cli_edge_winx64.zip
    - put: edge-deb-installer-32
      params:
        file: archives/cf8-cli-installer_i686.deb
    - put: edge-deb-installer-64
      params:
        file: archives/cf8-cli-installer_x86-64.deb
    - put: edge-redhat-installer-32
      params:
        file: archives/cf8-cli-installer_i686.rpm
    - put: edge-redhat-installer-64
      params:
        file: archives/cf8-cli-installer_x86-64.rpm
    - put: edge-osx-installer-64
      params:
        file: archives/cf8-cli-installer_osx.pkg
    - put: edge-windows-installer-32
      params:
        file: winstallers/cf8-cli-installer_win32.zip
    - put: edge-windows-installer-64
      params:
        file: winstallers/cf8-cli-installer_winx64.zip

- name: integration-installers
  serial: true
  plan:
  - in_parallel:
    - get: cli-ci
    - get: cli
      passed: [create-installers]
    - get: edge-deb-installer-64
      trigger: true
      passed: [create-installers]
    - get: edge-deb-installer-32
      trigger: true
      passed: [create-installers]
    - get: edge-redhat-installer-64
      trigger: true
      passed: [create-installers]
    - get: edge-redhat-installer-32
      trigger: true
      passed: [create-installers]
    - get: ubuntu-64-image
    - get: ubuntu-32-image
    - get: fedora-image
  - in_parallel:
    - task: deb-64
      timeout: 3h
      image: ubuntu-64-image
      file: cli-ci/ci/shared/tasks/integration-debian-installers.yml
      input_mapping:
        installer: edge-deb-installer-64
      params:
        MAJOR_VERSION: 8
        ARCH: x86-64
    - task: deb-32
      timeout: 3h
      image: ubuntu-32-image
      file: cli-ci/ci/shared/tasks/integration-debian-installers.yml
      input_mapping:
        installer: edge-deb-installer-32
      params:
        MAJOR_VERSION: 8
        ARCH: i686
    - task: rpm-64
      timeout: 3h
      image: fedora-image
      file: cli-ci/ci/shared/tasks/integration-rpm-installers.yml
      input_mapping:
        installer: edge-redhat-installer-64
      params:
        MAJOR_VERSION: 8
        ARCH: x86-64
    - task: rpm-32
      timeout: 3h
      image: fedora-image
      file: cli-ci/ci/shared/tasks/integration-rpm-installers.yml
      input_mapping:
        installer: edge-redhat-installer-32
      params:
        MAJOR_VERSION: 8
        ARCH: i686

